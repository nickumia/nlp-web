name: API Gateway Deployment

on:
  workflow_dispatch:
    code_version:
      description: 'CAP6635 Version:'
      required: true
      type: string
      default: '0.0.1'
    deploy:
      description: 'Create?'
      required: true
      type: choice
      default: 'Yes'
      options:
        - Yes
        - No

jobs:
  terraform:
    name: Run Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: |
          cd terraform/aws/api_lambda
          terraform fmt -check

      - name: Terraform Init
        id: init
        run: |
          cd terraform/aws/api_lambda
          terraform init
      
      - name: Terraform Validate
        id: validate
        run: |
          cd terraform/aws/api_lambda
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
          cd terraform/aws/api_lambda
          terraform plan -no-color -var='sofware_version=${{inputs.code_version}}' > /dev/null 2>&1

      - name: Terraform Apply
        if: ${{ inputs.deploy == 'Yes' }}
        run: |
          cd terraform/aws/api_lambda
          terraform apply -auto-approve -var='sofware_version=${{inputs.code_version}}' > /dev/null 2>&1

      - name: Terraform Destroy
        if: ${{ inputs.deploy == 'No' }}
        run: |
          cd terraform/aws/api_lambda
          terraform destroy -auto-approve > /dev/null 2>&1
